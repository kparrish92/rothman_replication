"type" = "Spreadsheet..type") %>%
filter(!is.na(type)) %>%
filter(type != "filler") %>%
mutate(Response = case_when(
Response == "tick.png" ~ "word",
Response == "cross.png" ~ "non"
)) %>%
group_by(type, gorilla_id) %>%
summarize(correct_n = sum(Correct)) %>%
pivot_wider(names_from = "type", values_from = "correct_n") %>%
mutate(lextale_score_span =
((word/60*100) + (non/30*100)) / 2)
span_lextale_2 = read.csv(here("data_g", "data_exp_127819-v11_task-6d1f.csv"),
na.strings = c("")) %>%
select("Participant.Private.ID",
"Spreadsheet..targetresponse",
"Spreadsheet..item",
"Spreadsheet..type",
Correct, Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"correct_answer" = "Spreadsheet..targetresponse",
"item" = "Spreadsheet..item",
"type" = "Spreadsheet..type") %>%
filter(!is.na(type)) %>%
filter(type != "filler") %>%
mutate(Response = case_when(
Response == "tick.png" ~ "word",
Response == "cross.png" ~ "non"
)) %>%
group_by(type, gorilla_id) %>%
summarize(correct_n = sum(Correct)) %>%
pivot_wider(names_from = "type", values_from = "correct_n") %>%
mutate(lextale_score_span =
((word/60*100) + (non/30*100)) / 2)
span_lextale = rbind(span_lextale_1, span_lextale_2)
questionnaire_1 = read.csv(here("data_g", "data_exp_127819-v12_questionnaire-zbjj.csv"),
na.strings = c("")) %>%
select(Participant.Private.ID, Question, Response, Response.Type,
Key) %>%
filter(!is.na(Question)) %>%
filter(Key =="value") %>%
filter(Response.Type == "response") %>%
pivot_wider(names_from = Question, values_from = Response)
questionnaire_2 = read.csv(here("data_g", "data_exp_127819-v11_questionnaire-zbjj.csv"),
na.strings = c("")) %>%
select(Participant.Private.ID, Question, Response, Response.Type,
Key) %>%
filter(!is.na(Question)) %>%
filter(Key =="value") %>%
filter(Response.Type == "response") %>%
pivot_wider(names_from = Question, values_from = Response)
questionnaire = rbind(questionnaire_1, questionnaire_2)
names(questionnaire)[1] = "gorilla_id"
names(questionnaire)[4] = "L1"
names(questionnaire)[5] = "eng_aoa"
names(questionnaire)[6] = "span_aoa"
names(questionnaire)[7] = "port_aoa"
names(questionnaire)[8] = "prolific_id"
glimpse(questionnaire)
lextale_df = left_join(questionnaire,
eng_lextale, by = "gorilla_id") %>%
left_join(port_lextale, by = "gorilla_id") %>%
left_join(span_lextale, by = "gorilla_id") %>%
select(gorilla_id, L1, eng_aoa,
span_aoa, port_aoa, prolific_id, lextale_score_eng,
lextale_score_port, lextale_score_span)
lextale_df %>%
write.csv(here("data_g", "tidy", "lextale_df.csv"))
lextale_df %>% group_by(L1) %>% summarize(n = n())
View(questionnaire)
names(questionnaire)[1] = "gorilla_id"
names(questionnaire)[4] = "L1"
names(questionnaire)[6] = "eng_aoa"
names(questionnaire)[7] = "span_aoa"
names(questionnaire)[8] = "port_aoa"
names(questionnaire)[9] = "prolific_id"
questionnaire = rbind(questionnaire_1, questionnaire_2)
names(questionnaire)[1] = "gorilla_id"
names(questionnaire)[4] = "L1"
names(questionnaire)[6] = "eng_aoa"
names(questionnaire)[7] = "span_aoa"
names(questionnaire)[8] = "port_aoa"
names(questionnaire)[9] = "prolific_id"
lextale_df = left_join(questionnaire,
eng_lextale, by = "gorilla_id") %>%
left_join(port_lextale, by = "gorilla_id") %>%
left_join(span_lextale, by = "gorilla_id") %>%
select(gorilla_id, L1, eng_aoa,
span_aoa, port_aoa, prolific_id, lextale_score_eng,
lextale_score_port, lextale_score_span)
View(lextale_df)
lextale_df %>%
write.csv(here("data_g", "tidy", "lextale_df.csv"))
lextale_df %>% group_by(L1) %>% summarize(n = n())
# Tidy experimental tasks --------------------------------------------------------------
#
# Last update: 2023-05-16
# This script loads and tidies the data for all
# semeantic interpretation and collocation tasks
#
# -----------------------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
lextale_df = read.csv(here("data_g", "tidy", "lextale_df.csv"))
# Tidy experimental tasks --------------------------------------------------------------
#
# Last update: 2023-05-16
# This script loads and tidies the data for all
# semeantic interpretation and collocation tasks
#
# -----------------------------------------------------------------------------
source(here::here("scripts", "00_libs.R"))
source(here::here("scripts", "01_helpers.R"))
lextale_df = read.csv(here("data_g", "tidy", "lextale_df.csv"))
interpretation_task_ids = read.csv(here("data_g", "data_exp_128242-v3_questionnaire-9e8c.csv")) %>%
filter(Response.Type == "action") %>%
select("Participant.Private.ID",
Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"prolific_id" = "Response")
collocation_task_1 = read.csv(here("data_g", "data_exp_127819-v12_task-t5nj.csv")) %>%
select("Participant.Private.ID",
"Spreadsheet..prompt",
"Spreadsheet..correct",
"Spreadsheet..opt_a",
Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"prompt" = "Spreadsheet..prompt",
"opt_a" = "Spreadsheet..opt_a",
"correct_answer" = "Spreadsheet..correct") %>%
mutate(is_correct = case_when(
correct_answer == "opt_b" & Response == "B" ~ 1,
correct_answer == "opt_b" & Response == "A" ~ 0,
correct_answer == "opt_a" & Response == "A" ~ 1,
correct_answer == "opt_a" & Response == "B" ~ 0,
)) %>%
mutate(pre_post = case_when(
opt_a == "pais orgulhosos" ~ "post",
opt_a == "super-heróis corajosos" ~ "pre",
opt_a == "opções várias" ~ "pre",
opt_a == "Ming aventureiros" ~ "pre",
opt_a == "pessoa mesma" ~ "pre",
opt_a == "pais afetuosos" ~ "post",
opt_a == "meninos fortes" ~ "post",
opt_a == "amigos pobres" ~ "post",
opt_a == "amigo velho" ~ "pre",
opt_a == "estudantes estudiosos" ~ "post"
)) %>%
filter(!is.na(pre_post))
# to make desc
#%>%
#  group_by(pre_post, gorilla_id) %>%
#  summarize(correct_no_coll = sum(is_correct)) %>%
#  pivot_wider(names_from = "pre_post", values_from = "correct_no_coll") %>%
#  rename("pre_coll" = "pre",
#        "post_coll" = "post")
collocation_task_2 = read.csv(here("data_g", "data_exp_127819-v11_task-t5nj.csv")) %>%
select("Participant.Private.ID",
"Spreadsheet..prompt",
"Spreadsheet..correct",
"Spreadsheet..opt_a",
Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"prompt" = "Spreadsheet..prompt",
"opt_a" = "Spreadsheet..opt_a",
"correct_answer" = "Spreadsheet..correct") %>%
mutate(is_correct = case_when(
correct_answer == "opt_b" & Response == "B" ~ 1,
correct_answer == "opt_b" & Response == "A" ~ 0,
correct_answer == "opt_a" & Response == "A" ~ 1,
correct_answer == "opt_a" & Response == "B" ~ 0,
)) %>%
mutate(pre_post = case_when(
opt_a == "pais orgulhosos" ~ "post",
opt_a == "super-heróis corajosos" ~ "pre",
opt_a == "opções várias" ~ "pre",
opt_a == "Ming aventureiros" ~ "pre",
opt_a == "pessoa mesma" ~ "pre",
opt_a == "pais afetuosos" ~ "post",
opt_a == "meninos fortes" ~ "post",
opt_a == "amigos pobres" ~ "post",
opt_a == "amigo velho" ~ "pre",
opt_a == "estudantes estudiosos" ~ "post"
)) %>%
filter(!is.na(pre_post))
collocation_task = rbind(collocation_task_1, collocation_task_2) %>%
left_join(lextale_df, by = "gorilla_id")  %>%
write.csv(here("data_g", "tidy", "collocation_task.csv"))
interpretation_task_1 = read.csv(here("data_g", "data_exp_127819-v12_task-6yod.csv")) %>%
select("Participant.Private.ID",
"Spreadsheet..prompt",
"Spreadsheet..correct",
"Spreadsheet..opt_b",
Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"prompt" = "Spreadsheet..prompt",
"opt_b" = "Spreadsheet..opt_b",
"correct_answer" = "Spreadsheet..correct") %>%
mutate(is_correct = case_when(
correct_answer == "opt_b" & Response == "B" ~ 1,
correct_answer == "opt_b" & Response == "A" ~ 0,
correct_answer == "opt_a" & Response == "A" ~ 1,
correct_answer == "opt_a" & Response == "B" ~ 0,
)) %>%
mutate(pre_post = case_when(
opt_b == "Possui dois Lumpears na sala de estar que as relíquias." ~ "post",
opt_b == "Os vizinhos não têm dinheiro." ~ "pre",
opt_b == "Eles falam um idioma que muito poucas pessoas falam." ~ "pre",
opt_b == "O homem se sente sozinho." ~ "post",
opt_b == "Comprei outro computador." ~ "pre",
opt_b == "Ele contém informações que são para verar." ~ "post",
opt_b == "O presidente que já havia falado com a classe." ~ "pre",
opt_b == "Meu amigo não é jovem." ~ "pre",
opt_b == "Mariela é velha." ~ "pre",
opt_b == "Não há ninguém (tão especial) quanto Marta, que eu te disse." ~ "post",
opt_b == "Os trabalhos são ótimos." ~ "post",
opt_b == "A pintura é enorme e custa muito dinheiro" ~ "post",
opt_b == "Não contei a você sobre mais ninguém, além de Marta." ~ "post")) %>%
filter(!is.na(pre_post)) %>%
left_join(lextale_df, by = "gorilla_id")
int_2_temp = read.csv(here("data_g", "data_exp_128242-v3_task-6yod.csv")) %>%
select("Participant.Private.ID",
"Spreadsheet..prompt",
"Spreadsheet..correct",
"Spreadsheet..opt_b",
Response) %>%
rename("gorilla_id" = "Participant.Private.ID",
"prompt" = "Spreadsheet..prompt",
"opt_b" = "Spreadsheet..opt_b",
"correct_answer" = "Spreadsheet..correct") %>%
mutate(is_correct = case_when(
correct_answer == "opt_b" & Response == "B" ~ 1,
correct_answer == "opt_b" & Response == "A" ~ 0,
correct_answer == "opt_a" & Response == "A" ~ 1,
correct_answer == "opt_a" & Response == "B" ~ 0,
)) %>%
mutate(pre_post = case_when(
opt_b == "Possui dois Lumpears na sala de estar que as relíquias." ~ "post",
opt_b == "Os vizinhos não têm dinheiro." ~ "pre",
opt_b == "Eles falam um idioma que muito poucas pessoas falam." ~ "pre",
opt_b == "O homem se sente sozinho." ~ "post",
opt_b == "Comprei outro computador." ~ "pre",
opt_b == "Ele contém informações que são para verar." ~ "post",
opt_b == "O presidente que já havia falado com a classe." ~ "pre",
opt_b == "Meu amigo não é jovem." ~ "pre",
opt_b == "Mariela é velha." ~ "pre",
opt_b == "Não há ninguém (tão especial) quanto Marta, que eu te disse." ~ "post",
opt_b == "Os trabalhos são ótimos." ~ "post",
opt_b == "Eles falam uma linguagem estranha." ~ "pre",
opt_b == "A pintura é enorme e custa muito dinheiro" ~ "post",
opt_b == "Não contei a você sobre mais ninguém, além de Marta." ~ "post")) %>%
filter(!is.na(pre_post))
tt = left_join(lextale_df, interpretation_task_ids, by = "prolific_id") %>%
rename("gorilla_id_o" = "gorilla_id.x") %>%
rename("gorilla_id" = "gorilla_id.y") %>%
filter(!is.na(gorilla_id))
interpretation_task_2 = int_2_temp %>%
left_join(tt, by = "gorilla_id") %>%
select(-gorilla_id_o)
interpretation_task = rbind(interpretation_task_1, interpretation_task_2) %>%
write.csv(here("data_g", "tidy", "interpretation_task.csv"))
source(here::here("scripts", "00_libs.R"))
source(here("scripts", "04_load_data.R"))
# Plots
# Proficiency in each language per group
prof_df = collocation_task %>%
group_by(prolific_id, L1) %>%
summarise(English = mean(lextale_score_eng),
Spanish = mean(lextale_score_span),
Portuguese = mean(lextale_score_port)) %>%
pivot_longer(cols = c("English", "Spanish", "Portuguese"),
names_to = "Language",
values_to = "Score")
mean(prof_df$lextale_score_eng)
mean(prof_df$lextale_score_span)
mean(prof_df$lextale_score_port)
prof_df %>%
ggplot(aes(y = Score, x = Language, fill = L1)) +
geom_boxplot() + theme_minimal() +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
prof_df = collocation_task %>%
group_by(prolific_id, L1) %>%
summarise(English = mean(lextale_score_eng),
Spanish = mean(lextale_score_span),
Portuguese = mean(lextale_score_port)) %>%
pivot_longer(cols = c("English", "Spanish", "Portuguese"),
names_to = "Language",
values_to = "Score")
View(prof_df)
mean(prof_df$lextale_score_eng)
mean(prof_df$lextale_score_span)
mean(prof_df$lextale_score_port)
mean(prof_df$lextale_score_eng)
mean(as.numeric(prof_df$lextale_score_eng))
mean(as.numeric(prof_df$lextale_score_span))
mean(as.numeric(prof_df$lextale_score_port))
mean(as.numeric(prof_df$lextale_score_eng))
mean(as.numeric(prof_df$lextale_score_span))
mean(as.numeric(prof_df$lextale_score_port))
View(prof_df)
unique(prof_df$Score)
prof_df %>%
ggplot(aes(y = Score, x = Language, fill = L1)) +
geom_boxplot() + theme_minimal()
prof_df %>%
ggplot(aes(y = Score, x = Language, fill = L1)) +
geom_boxplot() + theme_minimal() +
scale_fill_manual(values=c("#E69F00", "#56B4E9")) +
ggsave(here("docs", "figs", "prof_plot.png"))
collocation_task %>%
group_by(prolific_id, pre_post, L1) %>%
summarize(n_correct = sum(is_correct))
desc_all = collocation_task %>%
group_by(prolific_id, pre_post, L1) %>%
summarize(n_correct = sum(is_correct))
mean_correct = desc_all %>%
group_by(L1, pre_post) %>%
summarize(mean_c = mean(n_correct),
sd_c = sd(n_correct))
ggplot(data=mean_correct, aes(x=pre_post, y=mean_c, fill=L1)) +
geom_bar(color = "black", position = 'dodge', stat='identity') +
geom_text(aes(label=paste0(round(mean_c, digits = 2), " (",
round(sd_c, digits = 1), ")")),
position=position_dodge(width=0.9), vjust=-0.5, size = 3) +
ylim(0,5) +
theme_minimal() +
ylab("Group mean (correct)") +
theme(legend.position="bottom")
desc_all_i = interpretation_task %>%
group_by(prolific_id, pre_post, L1) %>%
summarize(n_correct = sum(is_correct))
mean_correct_i = desc_all_i %>%
group_by(L1, pre_post) %>%
summarize(mean_c = mean(n_correct),
sd_c = sd(n_correct))
ggplot(data=mean_correct_i, aes(x=pre_post, y=mean_c, fill=L1)) +
geom_bar(color = "black", position = 'dodge', stat='identity') +
geom_text(aes(label=paste0(round(mean_c, digits = 2), " (",
round(sd_c, digits = 1), ")")),
position=position_dodge(width=0.9), vjust=-0.5, size = 3) +
ylim(0,5) +
theme_minimal() +
ylab("Group mean (correct)") +
theme(legend.position="bottom")
effect_size(3.3,2.88,1.2,1.2)
source(here::here("scripts", "00_libs.R"))
source(here("scripts", "04_load_data.R"))
### aov collocation task
aov_col_0 <- aov(n_correct ~ 1,
data = aov_df_col)
aov_col_1 <- aov(n_correct ~ L1,
data = aov_df_col)
aov_col_2 <- aov(n_correct ~ L1 + pre_post,
data = aov_df_col)
aov_col_3 <- aov(n_correct ~ L1*pre_post,
data = aov_df_col)
summary(aov_col)
anova(aov_col_0, aov_col_1, aov_col_2, aov_col_3)
### aov interpretation task
aov_int_0 <- aov(n_correct ~ 1,
data = aov_df_int)
aov_int_1 <- aov(n_correct ~ L1,
data = aov_df_int)
aov_int_2 <- aov(n_correct ~ L1 + pre_post,
data = aov_df_int)
aov_int_3 <- aov(n_correct ~ L1*pre_post,
data = aov_df_int)
summary(aov_int)
anova(aov_int_0, aov_int_1, aov_int_2, aov_int_3)
aov_df_int
View(aov_df_col)
aov_df_col %>%
group_by(pre_post, L1) %>%
summarize(mean_corr = mean(n_correct),
n = n(),
sd_corr = sd(n_correct))
d_df = aov_df_col %>%
group_by(pre_post, L1) %>%
summarize(mean_corr = mean(n_correct),
n = n(),
sd_corr = sd(n_correct))
TOSTtwo(m1 = d_df$mean_corr[1],
m2 = d_df$mean_corr[2],
sd1 = d_df$mean_corr[1],
sd2 = d_df$mean_corr[2],
n1 = d_df$n[1],
n2 = d_df$n[2],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
TOSTER::TOSTtwo(m1 = d_df$mean_corr[1],
m2 = d_df$mean_corr[2],
sd1 = d_df$mean_corr[1],
sd2 = d_df$mean_corr[2],
n1 = d_df$n[1],
n2 = d_df$n[2],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
View(d_df)
# TOST of col task in pre
TOSTER::TOSTtwo(m1 = d_df$mean_corr[3],
m2 = d_df$mean_corr[4],
sd1 = d_df$mean_corr[3],
sd2 = d_df$mean_corr[4],
n1 = d_df$n[3],
n2 = d_df$n[4],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
d_df_i = aov_df_int %>%
group_by(pre_post, L1) %>%
summarize(mean_corr = mean(n_correct),
n = n(),
sd_corr = sd(n_correct))
TOSTER::TOSTtwo(m1 = d_df_i$mean_corr[1],
m2 = d_df_i$mean_corr[2],
sd1 = d_df_i$mean_corr[1],
sd2 = d_df_i$mean_corr[2],
n1 = d_df_i$n[1],
n2 = d_df_i$n[2],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
TOSTER::TOSTtwo(m1 = d_df_i$mean_corr[3],
m2 = d_df_i$mean_corr[4],
sd1 = d_df_i$mean_corr[3],
sd2 = d_df_i$mean_corr[4],
n1 = d_df_i$n[3],
n2 = d_df_i$n[4],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
TOSTER::TOSTtwo(m1 = d_df_i$mean_corr[1],
m2 = d_df_i$mean_corr[2],
sd1 = d_df_i$mean_corr[1],
sd2 = d_df_i$mean_corr[2],
n1 = d_df_i$n[1],
n2 = d_df_i$n[2],
low_eqbound_d = -.47, high_eqbound_d = .47, alpha = .05,
plot = TRUE, verbose = TRUE)
TOSTER::TOSTtwo(m1 = d_df$mean_corr[1],
m2 = d_df$mean_corr[2],
sd1 = d_df$mean_corr[1],
sd2 = d_df$mean_corr[2],
n1 = d_df$n[1],
n2 = d_df$n[2],
low_eqbound_d = -.4, high_eqbound_d = .4, alpha = .05,
plot = TRUE, verbose = TRUE)
int_mod_aov <-
afex::aov_ez(
id = "gorilla_id",
dv = "n_correct",
between = "L1",
within = "pre_post",
data = aov_df_int,
print.formula = T
)
source(here::here("scripts", "00_libs.R"))
source(here("scripts", "04_load_data.R"))
### aov collocation task
col_mod_aov <-
afex::aov_ez(
id = "gorilla_id",
dv = "n_correct",
between = "L1",
within = "pre_post",
data = aov_df_col,
print.formula = T
)
View(aov_df_col)
col_mod_aov[["anova_table"]]
df_aov_col = col_mod_aov[["anova_table"]] %>%
write.csv(here("data_g", "col_anova_df.csv"))
int_mod_aov <-
afex::aov_ez(
id = "gorilla_id",
dv = "n_correct",
between = "L1",
within = "pre_post",
data = aov_df_int,
print.formula = T
)
df_aov_int = int_mod_aov[["anova_table"]] %>%
write.csv(here("data_g", "int_anova_df.csv"))
int_mod_aov[["anova_table"]]
df_aov_int = int_mod_aov[["anova_table"]]
df_aov_col = col_mod_aov[["anova_table"]]
df_aov_col$`num Df`
df_aov_col$`num Df`[1]
df_aov_col = col_mod_aov[["anova_table"]] %>%
rename(`num Df` = "num_df")
df_aov_col = col_mod_aov[["anova_table"]] %>%
rename("num_df" = `num Df`)
df_aov_col$num_df[1]
df_aov_col$`den Df`[1]
df_aov_col = col_mod_aov[["anova_table"]] %>%
rename("num_df" = `num Df`) %>%
rename("den_df" = `den Df`)
df_aov_col$F[1]
round(df_aov_col$F[1], digits = 2)
round(df_aov_col$`Pr(>F)`[1], digits = 2)
df_aov_col
df_aov_col = col_mod_aov[["anova_table"]] %>%
rename("num_df" = `num Df`) %>%
rename("den_df" = `den Df`) %>%
rename("p.value" = `Pr(>F)`)
round(df_aov_col$p.value[1], digits = 2)
df_aov_col = col_mod_aov[["anova_table"]] %>%
rename("num_df" = `num Df`) %>%
rename("den_df" = `den Df`) %>%
rename("p.value" = `Pr(>F)`)
round(df_aov_col$p.value[1], digits = 2)
View(df_aov_col)
View(df_aov_int)
View(df_aov_int)
View(df_aov_col)
